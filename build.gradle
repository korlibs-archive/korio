buildscript {
	ext.kotlinVersion = '1.1.50'
	ext.compilerVersion = ext.kotlinVersion
	ext.librariesVersion = ext.kotlinVersion
	ext.eapChannel = 'https://dl.bintray.com/kotlin/kotlin-eap-1.1'
	ext.serializationRepo = 'https://kotlin.bintray.com/kotlinx'
	ext.serializationPluginVersion = '0.1'

	repositories {
		jcenter()
		maven { url serializationRepo }
		maven { url eapChannel }
		mavenLocal()
	}

	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$compilerVersion"
	}
	ext {
		libraries = [
				kotlin_stdlib_common: "org.jetbrains.kotlin:kotlin-stdlib-common:$librariesVersion",
				kotlin_stdlib_jvm   : "org.jetbrains.kotlin:kotlin-stdlib:$librariesVersion",
				kotlin_stdlib_js    : "org.jetbrains.kotlin:kotlin-stdlib-js:$librariesVersion",

				kotlin_test_common  : "org.jetbrains.kotlin:kotlin-test-common:$librariesVersion",
				kotlin_test_jvm     : "org.jetbrains.kotlin:kotlin-test:$librariesVersion",
				kotlin_test_js      : "org.jetbrains.kotlin:kotlin-test-js:$librariesVersion",

				kotlin_reflect      : "org.jetbrains.kotlin:kotlin-reflect:$librariesVersion",
		]
	}

}

def file = new File(".").absolutePath

allprojects {
	repositories {
		mavenLocal()
		jcenter()
		maven { url eapChannel }
		mavenLocal()
	}

	group 'com.soywiz'
	version "$korVersion"

	def type

	switch (project.name) {
		case "korio":
		case "kotlinx.arraybuffers":
		case "korio-ext-web":
			// Should be a platform-common library in the future!
		case "korio-ext-db-elasticsearch":
		case "korio-ext-db-cassandra":
		case "korio-ext-db-redis":
		case "korio-ext-amazon-s3":
		case "korio-ext-amazon-common":
		case "korio-ext-amazon-dynamodb":
		//
		case "korio-example-jvm":
			type = "jvm";
			break;
		default:
			if (project.name.endsWith('-js')) {
				type = "js";
			} else {
				type = "common";
			}
			break;
	}

	switch (type) {
		case "js":
			apply plugin: 'kotlin-platform-js'
			dependencies {
				compile libraries.kotlin_stdlib_js
				testCompile libraries.kotlin_test_js
			}
			compileKotlin2Js {
				kotlinOptions.moduleKind = "umd"
				//kotlinOptions.sourceMap = true //
				kotlinOptions.sourceMap = false // No sourcemaps!
			}
			break;
		case "jvm":
			apply plugin: 'kotlin-platform-jvm'
			dependencies {
				compile libraries.kotlin_stdlib_jvm
				testCompile libraries.kotlin_test_jvm
				testCompile 'junit:junit:4.12'
			}
			break;
		default:
			apply plugin: 'kotlin-platform-common'
			dependencies {
				compile libraries.kotlin_stdlib_common
				testCompile libraries.kotlin_test_common
			}
			break;
	}

	apply plugin: 'maven'
	apply plugin: 'signing'
	apply plugin: 'maven-publish'
	apply plugin: 'idea'

	kotlin { experimental { coroutines 'enable' } }

	task javadoc2(type: Javadoc) {
		failOnError = false
	}

	task javadocJar(type: Jar, dependsOn: javadoc2) {
		classifier = 'javadoc'
		from 'build/docs/javadoc'
	}

	task sourcesJar(type: Jar) {
		from sourceSets.main.allSource
		classifier = 'sources'
	}

	artifacts {
		//archives jar
		archives javadocJar
		archives sourcesJar
	}

// gradle uploadArchives
	if (project.hasProperty('sonatypeUsername')) {
		signing {
			sign configurations.archives
		}

		uploadArchives {
			repositories {
				mavenDeployer {
					beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

					repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
						authentication(userName: project.sonatypeUsername, password: project.sonatypePassword)
					}

					pom.project {
						name "${project.name}"
						packaging 'jar'
						description 'Korio: Kotlin cORoutines I/O : Streams + Async TCP Client/Server + Virtual File System for JVM, Node.JS and Browser'
						url 'https://github.com/soywiz/korio/'
						inceptionYear '2016'

						scm {
							url 'scm:git@github.com:soywiz/korio.git'
							connection 'scm:git@github.com:soywiz/korio.git'
							developerConnection 'scm:git@github.com:soywiz/korio.git'
						}

						licenses {
							license {
								name 'The Apache Software License, Version 2.0'
								url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
								distribution 'repo'
							}
						}

						developers {
							developer {
								id 'soywiz'
								name 'Carlos Ballesteros Velasco'
							}
						}
					}
				}
			}
		}
	}

	publishing {
		publications {
			MyPublication(MavenPublication) {
				from components.java
				groupId project.group
				artifactId project.name
				version "$project.version"
			}
		}
	}

	task deploy(dependsOn: ['install', 'uploadArchives']) {
	}


}

